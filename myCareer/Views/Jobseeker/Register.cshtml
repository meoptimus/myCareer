@model myCareer.Models.jobseekerView

@{
    List<SelectListItem> gender = new List<SelectListItem>();

    ViewBag.Title = "Register";
    Layout = "~/Views/Layouts/Frontend/_Frontend.cshtml";
    gender.Add(new SelectListItem
    {
        Text = "Male",
        Value = "male"

    });
    gender.Add(new SelectListItem
    {
        Text = "Female",
        Value = "female"

    });
    gender.Add(new SelectListItem
    {
        Text = "Others",
        Value = "others"

    });
}
@section head
{
<link href="~/Content/Backend/AdminLTE.css" rel="stylesheet" />
}

<div class="container">
    <div class="careerfy-employer-box-section">

       @using (Html.BeginForm("Register", "Jobseeker", FormMethod.Post, new { id = "js_info", name = "js_info" ,@enctype="multipart/form-data" }))
       {
            @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           @ViewBag.message
            <div class="row">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">Basic Details:</h3>
                    </div>
                    <div class="box-body">
                        <div class="row">
                        <div class="form-group col-md-6">
                            <label>Name:</label>                           
                                @Html.EditorFor(model => model.full_name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.full_name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label>Current Address</label>
                                @Html.EditorFor(model => model.current_address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.current_address, "", new { @class = "text-danger" })
                        </div>
                            </div>
                        <div class="row">

                        <div class="form-group col-md-6">
                            <label>Email:</label>
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-6">
                            <label>Contact Number:</label>
                                @Html.EditorFor(model => model.contact, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.contact, "", new { @class = "text-danger" })
                        </div>
                            </div>
                    </div>
                </div>
              </div>
              <div class="row">
                  <div class="box box-success">
                      <div class="box-header with-border">
                          <h3 class="box-title">Basic Details:</h3>
                      </div>
                      <div class="box-body">
                          <div class="form-group col-md-4">
                              <label>Username:</label>
                                  @Html.EditorFor(model => model.user_name, new { htmlAttributes = new { @class = "form-control" } })
                                  @Html.ValidationMessageFor(model => model.user_name, "", new { @class = "text-danger" })
                          </div>

                          <div class="form-group col-md-4">
                              <label>Password:</label>
                                  @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                  @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                          </div>

                          <div class="form-group col-md-4">
                              <label>Confirm Password:</label>
                              @Html.EditorFor(model => model.confirm_password, new { htmlAttributes = new { @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.confirm_password, "", new { @class = "text-danger" })
                          </div>
                          <div class="form-group col-md-4">
                              <label>Profile Image:</label>
                              <input type="file" id="profile" name="profile" required="required" class="form-control" />
                          </div>
                          <div class="form-group col-md-4">
                              <label>Gender:</label>
                              @Html.DropDownListFor(model => model.gender, gender, "-- Select Type --")
                              @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                          </div>
                          <div class="form-group col-md-4">
                              <label>Date of Birth</label>
                                @Html.EditorFor(model => model.dateofbirth, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.dateofbirth, "", new { @class = "text-danger" })
                           </div>
                          <div class="form-group">
                              <div class="col-md-offset-11 pull-right">
                                  <input type="submit" value="Create" class="btn btn-primary" />
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
           
        }
        </div>
    </div>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

